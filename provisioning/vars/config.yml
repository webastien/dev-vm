###################################################################################################
# Virtual machine settings                                                                        #
###################################################################################################
machine:
  box:      garbetjie/debian8 # Box name, as seen on https://atlas.hashicorp.com/boxes/search
  hostname: dev-vm            # Virtual machine name you can see in Virtualbox
  memory:   2048              # RAM of the VM
  cpus:     2                 # Number of dedicated core (be sure don't use all of yours!)
  localDir: sites             # Local directory which will be synchronized with the VM
  syncType: nfs               # How the synchronization will be done

###################################################################################################
# Options for the installation, organized by task
#
# Each tasks can have a key / list pair of repositories and packages, all work in the same way:
# - "packages" contains a list of apt packages to install
# - "repositories" contains a list of... repositories (!),
#     each must have "src" (source), the "key" (apt GPG key) is optional.
###################################################################################################
tasks:
  ###############################################################
  utils: # First played task, so add tools you need here...
  ###############################################################
    packages: [ ctags, git, vim, curl, unzip, bash-completion ]
    config:   { allow_non_free_packages: true } # Enable non-free packages in sources.list

  ###############################################################
  mysql: # MySQL database configuration
  ###############################################################
    packages: [ python-mysqldb, mysql-server, mysql-client ]
    config:
      mycnf:     '/etc/mysql/conf.d/mysqld.cnf' # Path used to store configuration overrides
      collation: 'utf8_general_ci'              # Collation used for DB created with  in task sites
      encoding:  'utf8'                         # Encoding used for DB created with  in task sites

  ###############################################################
  php: # PHP configuration
  ###############################################################
    repositories:
      # - src: ppa:ondrej/php  <--- Will work with Ubuntu
      # Debian doesn't have ppa support (natively), so use dotdeb instead
      - src: 'deb http://packages.dotdeb.org jessie all'
        key: https://www.dotdeb.org/dotdeb.gpg

    packages:
      - php7.0-apcu
      - php7.0-cgi
      - php7.0-cli
      - php7.0-common
      - php7.0-curl
      - php7.0-fpm
      - php7.0-gd
      - php7.0-imap
      - php7.0-intl
      - php7.0-json
      - php7.0-mbstring
      - php7.0-mcrypt
      - php7.0-mysql
      - php7.0-opcache
      - php7.0-xml

    config:
      phpini:        '/etc/php/7.0/fpm/conf.d/99-myPHPconf.ini' # Path used to store conf overrides
      drupalBinary:  '/usr/local/bin/drupal'                    # Where Drupal console bin will be place
      composer:      '/usr/local/bin/composer'                  # Same for composer...
      drushLanguage: true  # If true, download Drush language commands
      drushBinary:   '/usr/local/bin/drush'                     # Same for drush...
      drushFolder:   '/usr/local/share/drush'                   # Where drush will be installed
      drupalFolder:  '/home/vagrant/.console'                   # Same for drupal console

  ###############################################################
  apache: # Apache server configuration
  #  "modules" is a list of apache modules to enable
  ###############################################################
    packages: [ apache2, libapache2-mod-fastcgi ]
    modules:  [ rewrite, vhost_alias, expires, setenvif, actions ]

  ###############################################################
  sites:    # This VM will build site's starters defined here,
    vhosts: # add / remove / edit them following the same pattern
  ###############################################################
      # The most basic is simply to add an entry with the lonely key "domain".
      # This one will not have associated DB and its content will be a phpinfo() by default.
      # In fact, this is the key "starter" which fall back to "empty",
      # so it's the same as adding "starter: empty" or "starter: a-starter-not-found".
      # Actualy, only "empty" (this one), adminer, "drupal7" and "drupal8" are implemented.
      # Take a look at files in "starters" folder.
      - domain:  phpinfo.seb

      - domain:  adminer.seb
        starter: adminer

      # Here is the "full" example: You can see "db_name" (name of the associated database),
      # "db_user" / "db_pass" are respectively the username and the password to connect with it.
      # The database and the user (full access granted on it) will be created automaticaly.
      - domain:  drupal8.seb
        starter: drupal8
        modules: [ devel ] # Optional list of Drupal modules
        db_name: drupal8  # "db_name" is required when using starter drupal7/8
        db_user: drupal8  # If omitted, take the "db_name" value
        db_pass: drupal8  # If omitted, the password is null
        aliases:
          - www.drupal8.seb  # Aliases are optional
          -  fr.drupal8.seb
          -  en.drupal8.seb
        # Arguments passed to drush site-install, default to --site-name=<domain> --account-pass=admin
        drush_si_args: --account-pass=admin --locale=fr --site-name="Drupal8 starter" # --db-url always passed

      # A more simple example of site using a drupal7/8 starter...
      - domain:  drupal7.seb
        db_name: drupal7
        starter: drupal7
        aliases: [ www.drupal7.seb ]

